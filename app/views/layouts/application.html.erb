<!DOCTYPE html>
<html>
<head>
	<title>Myapp</title>

	<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
	<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.5/angular.min.js"></script>
	<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=&sensor=false&extension=.js"></script>
	<script type="text/javascript" src="https://d3js.org/d3.v3.min.js"></script>
	<%= stylesheet_link_tag    'default', media: 'all', 'data-turbolinks-track' => true %>
	<%= javascript_include_tag 'default', 'data-turbolinks-track' => true %>
	<%= csrf_meta_tags %>

	<style>

		body {
			margin: 20px;
			font-size: 16px;
			font-family: "Open Sans",serif;
		}
	</style>

	<style type="text/css">
		#map {
			height:420px;
			width:600px;
		}
		.infoWindowContent {
			font-size:  14px !important;
			border-top: 1px solid #ccc;
			padding-top: 10px;
		}
		h2 {
			margin-bottom:0;
			margin-top: 0;
		}



		.axis path,
		.axis line {
			fill: none;
			stroke: black;
			shape-rendering: crispEdges;
		}
		.axis text {
			font-family: sans-serif;
			font-size: 11px;
		}

		rect {
			-moz-transition: all 0.3s;
			-webkit-transition: all 0.3s;
			-o-transition: all 0.3s;
			transition: all 0.3s;
		}
		rect:hover{
			fill: orange;
		}



	</style>


	<script type="text/javascript">

		
		angular.module('myapp',[])
		.factory('cities', ['$http',function($http){

			return{
				getCities : function() {
					return $http({
						url: '/cities.json',
						method: 'GET'
					})
				}
			}

		}])
		.controller('myCtrl',['$scope','cities',function($scope,cities){

			$scope.cities ;
			$scope.getdata = function(){
				cities.getCities().success(function(data){
					console.log(data);
					$scope.cities=data;
					showmarker(data);
					showbarChart(data);

				});
			};

			showmarker = function(cities){
				
				var mapOptions = {
					zoom: 4,
					center: new google.maps.LatLng(40.0000, -98.0000),
					mapTypeId: google.maps.MapTypeId.TERRAIN
				}

				$scope.map = new google.maps.Map(document.getElementById('map'), mapOptions);

				$scope.markers = [];

				var infoWindow = new google.maps.InfoWindow();

				var createMarker = function (info){

					console.log(info);
					var marker = new google.maps.Marker({
						map: $scope.map,
						//getting positive value in info.long but it is negative so doing minus operation
						position: new google.maps.LatLng(info.lat,0-info.long),
						title: info.name
					});
					marker.content = '<div class="infoWindowContent"> Population : ' + info.population + '</div>';

					google.maps.event.addListener(marker, 'click', function(){
						infoWindow.setContent('<h2>' + marker.title + '</h2>' + marker.content);
						infoWindow.open($scope.map, marker);
					});

					$scope.markers.push(marker);

				}  
				console.log(cities.length);
				for (i = 0; i < cities.length; i++){
					createMarker(cities[i]);
				}
			}

			/*************************************************/
			showbarChart = function(cities){
				var w = 600;
				var h = 250;

				var dataset = []

				for(i =0; i<cities.length; i++){
					dataset.push({
						key: cities[i].name,
						value: cities[i].population

					});
				}

				var xScale = d3.scale.ordinal()
				.domain(d3.range(dataset.length))
				.rangeRoundBands([0, w], 0.05); 

				var yScale = d3.scale.linear()
				.domain([0, d3.max(dataset, function(d) {return d.value;})])
				.range([0, h]);

				var key = function(d) {
					return d.key;
				};

				//Create SVG element
				var svg = d3.select("#barchart")
				.append("svg")
				.attr("width", w)
				.attr("height", h);

				//Create bars
				svg.selectAll("rect")
				.data(dataset, key)
				.enter()
				.append("rect")
				.attr("x", function(d, i) {
					return xScale(i);
				})
				.attr("y", function(d) {
					return h - yScale(d.value);
				})
				.attr("width", xScale.rangeBand())
				.attr("height", function(d) {
					return yScale(d.value);
				})
				.attr("fill", function(d) {
					return "rgb(0, 0, " + (d.value * 10) + ")";
				})

				//Tooltip
				.on("mouseover", function(d) {
					//Get this bar's x/y values, then augment for the tooltip
					var xPosition = parseFloat(d3.select(this).attr("x")) + xScale.rangeBand() / 2;
					var yPosition = parseFloat(d3.select(this).attr("y")) + 14;
					
					//Update Tooltip Position & value
					d3.select("#tooltip")
					.style("left", xPosition + "px")
					.style("top", yPosition + "px")
					.select("#value")
					.text(d.value);
					d3.select("#tooltip").classed("hidden", false)
				})
				.on("mouseout", function() {
					//Remove the tooltip
					d3.select("#tooltip").classed("hidden", true);
				})	;

				//Create labels
				svg.selectAll("text")
				.data(dataset, key)
				.enter()
				.append("text")
				.text(function(d) {
					return d.key;
				})
				.attr("text-anchor", "middle")
				.attr("x", function(d, i) {
					return xScale(i) + xScale.rangeBand() / 2;
				})
				.attr("y", function(d) {
					return h - yScale(d.value) + 14;
				})
				.attr("font-family", "sans-serif") 
				.attr("font-size", "11px")
				.attr("fill", "white");
			}





}]);


</script>
</head>
<body ng-app='myapp'>
	
	<%= yield %>



</body>
</html>
